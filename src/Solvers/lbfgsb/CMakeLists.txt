project(lbfgsb)
enable_language(Fortran)

IF(USE_MULTIPRECISION)
	set(srcs mpmodule.f90 mpfuna.f90 mpfunf.f90 mpfung1.f90 secondu.f90)
	add_library(multiprecision OBJECT ${srcs})
	add_library(mpinterface OBJECT mpinterface.c)
	target_include_directories(mpinterface PUBLIC ${MPFR_INCLUDES} ${GMP_INCLUDE_DIR})
	IF(WIN32 AND MSVC)
		IF("${CMAKE_Fortran_COMPILER_ID}" STREQUAL "Intel")
			target_compile_options(multiprecision PUBLIC "/fast /assume:nounderscore")
		ENDIF()
	ELSEIF(UNIX AND "${CMAKE_Fortran_COMPILER_ID}" STREQUAL "Intel")
		target_compile_options(multiprecision PUBLIC "-fast -assume nounderscore")
	ENDIF()
ENDIF()

IF(WIN32 AND MSVC)
	IF(NOT ("${CMAKE_Fortran_COMPILER_ID}" STREQUAL "Intel"))
		MESSAGE("Please set MINGW_GFORTRAN to mingw-gfortran.exe location.")
		set (MINGW_GFORTRAN "C:/Software/mingw-w64/mingw64/bin/gfortran.exe" CACHE FILEPATH "Please provide full path to mingw-gfortran.exe")
	ENDIF()
ENDIF()
IF(VOOM_USE_OPENMP)
	IF(USE_MULTIPRECISION)	
		add_library(lbfgsb STATIC $<TARGET_OBJECTS:multiprecision> $<TARGET_OBJECTS:mpinterface> lbfgsb-routines-parallel.f)
		target_compile_definitions(lbfgsb PUBLIC "USE_MULTIPRECISION")
	ELSE()
		add_library(lbfgsb STATIC lbfgsb-routines-parallel.f)
	ENDIF()
ELSE()
	IF(USE_MULTIPRECISION)
		add_library(lbfgsb STATIC $<TARGET_OBJECTS:multiprecision> $<TARGET_OBJECTS:mpinterface> lbfgsb-routines.f)
		target_compile_definitions(lbfgsb PUBLIC "USE_MULTIPRECISION")
	ELSE()
		add_library(lbfgsb STATIC lbfgsb-routines.f)
	ENDIF()
ENDIF()

IF(USE_MULTIPRECISION)
	IF(WIN32 AND MSVC)
		IF("${CMAKE_Fortran_COMPILER_ID}" STREQUAL "Intel")
			target_compile_options(lbfgsb PRIVATE "/heap-arrays")			
		ENDIF()
	ELSEIF(UNIX AND "${CMAKE_Fortran_COMPILER_ID}" STREQUAL "Intel")
			target_compile_options(lbfgsb PRIVATE "-heap-arrays")
	ENDIF()
	target_link_libraries(lbfgsb PUBLIC ${MPFR_LIBRARIES} ${GMP_LIBRARIES})
ENDIF()